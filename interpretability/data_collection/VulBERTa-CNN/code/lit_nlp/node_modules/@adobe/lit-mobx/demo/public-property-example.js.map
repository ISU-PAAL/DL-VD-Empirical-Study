{"version":3,"file":"public-property-example.js","sourceRoot":"","sources":["public-property-example.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;EAUE;;;;;;;AAEF,OAAO,EAAE,IAAI,EAAkB,MAAM,KAAK,CAAC;AAC3C,OAAO,EAAE,aAAa,EAAE,QAAQ,EAAE,MAAM,mBAAmB,CAAC;AAE5D,OAAO,EAAE,cAAc,EAAE,MAAM,iBAAiB,CAAC;AACjD,OAAO,EAAE,OAAO,EAAE,MAAM,cAAc,CAAC;AACvC,OAAO,EAAE,QAAQ,EAAE,UAAU,EAAE,MAAM,MAAM,CAAC;AAG5C,IAAa,uBAAuB,GAApC,MAAa,uBAAwB,SAAQ,cAAc;IAIhD,MAAM;QACT,OAAO,IAAI,CAAA;uBACI,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,SAAS;SAC3D,CAAC;IACN,CAAC;CACJ,CAAA;AAPG;IADC,QAAQ,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC;wDACN;AAFhB,uBAAuB;IADnC,aAAa,CAAC,2BAA2B,CAAC;GAC9B,uBAAuB,CASnC;SATY,uBAAuB;AAYpC,IAAa,qBAAqB,GAAlC,MAAa,qBAAsB,SAAQ,cAAc;IAMrD,IAAI,cAAc;QACd,OAAO,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,CAAC,CAAC;IAClD,CAAC;IAEM,MAAM;QACT,OAAO,IAAI,CAAA;cACL,IAAI,CAAC,cAAc;YACjB,CAAC,CAAC,sBAAsB;YACxB,CAAC,CAAC,kCAAkC;SAC3C,CAAC;IACN,CAAC;CACJ,CAAA;AAdG;IAFC,QAAQ,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC;IAC9B,UAAU;sDACc;AAGzB;IADC,QAAQ;2DAGR;AARQ,qBAAqB;IADjC,aAAa,CAAC,yBAAyB,CAAC;GAC5B,qBAAqB,CAiBjC;SAjBY,qBAAqB;AAoBlC,IAAa,qBAAqB,GAAlC,MAAa,qBAAsB,SAAQ,cAAc;IAAzD;;QACY,YAAO,GAAG,IAAI,OAAO,EAAE,CAAC;IA6BpC,CAAC;IA3BU,MAAM;QACT,OAAO,IAAI,CAAA;;;;;;;;;;;;2BAYQ,IAAI,CAAC,OAAO;;;;2BAIZ,IAAI,CAAC,OAAO;;;6BAGV,IAAI,CAAC,cAAc;SACvC,CAAC;IACN,CAAC;IAEO,cAAc;QAClB,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,CAAC;IAC7B,CAAC;CACJ,CAAA;AA9BY,qBAAqB;IADjC,aAAa,CAAC,yBAAyB,CAAC;GAC5B,qBAAqB,CA8BjC;SA9BY,qBAAqB","sourcesContent":["/*\nCopyright 2018 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\n\nimport { html, TemplateResult } from 'lit';\nimport { customElement, property } from 'lit/decorators.js';\n\nimport { MobxLitElement } from '../src/lit-mobx';\nimport { Counter } from './my-counter';\nimport { computed, observable } from 'mobx';\n\n@customElement('public-observable-example')\nexport class PublicObservableExample extends MobxLitElement {\n    @property({ attribute: false })\n    public counter?: Counter;\n\n    public render(): TemplateResult {\n        return html`\n            Count is ${this.counter ? this.counter.count : 'Not Set'}\n        `;\n    }\n}\n\n@customElement('public-computed-example')\nexport class PublicComputedExample extends MobxLitElement {\n    @property({ attribute: false })\n    @observable\n    public counter?: Counter;\n\n    @computed\n    get isMoreThanFive() {\n        return this.counter && this.counter.count > 5;\n    }\n\n    public render(): TemplateResult {\n        return html`\n            ${this.isMoreThanFive\n                ? 'It is more than five'\n                : 'It is less than or equal to five'}\n        `;\n    }\n}\n\n@customElement('public-property-example')\nexport class PublicPropertyExample extends MobxLitElement {\n    private counter = new Counter();\n\n    public render(): TemplateResult {\n        return html`\n            <h3>Public Property Example</h3>\n            <p>\n                In this example an observable is passed into a custom element as\n                a public property and driven from outside the element.\n            </p>\n            <p>\n                We also pass the same observable to another element which uses a\n                mobx computed property to calculate a new value which is also\n                updated.\n            </p>\n            <public-observable-example\n                .counter=${this.counter}\n            ></public-observable-example>\n            <br />\n            <public-computed-example\n                .counter=${this.counter}\n            ></public-computed-example>\n            <br />\n            <button @click=${this.incrementCount}>Add</button>\n        `;\n    }\n\n    private incrementCount() {\n        this.counter.increment();\n    }\n}\n"]}